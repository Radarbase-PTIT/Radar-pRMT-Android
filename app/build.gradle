apply plugin: "com.android.application"
apply plugin: "com.google.android.gms.oss-licenses-plugin"
apply plugin: "kotlin-android"

android {
    compileSdkVersion 34
    buildToolsVersion "34.0.0"
    namespace "org.radarcns.detail"

    defaultConfig {
        applicationId "org.radarcns.detail"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode 69
        versionName "1.2.7"
        manifestPlaceholders = ["appAuthRedirectScheme": "org.radarbase.passive.app"]
        multiDexEnabled true
        ndkVersion "25.2.9519653"
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            ndk {
                debugSymbolLevel = "full"
            }
        }
        debug {
            shrinkResources false
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    packagingOptions {
        resources {
            excludes += ["META-INF/ASL2.0", "META-INF/LICENSE"]
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_17
        sourceCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        viewBinding true
    }
    flavorDimensions "channel"
    productFlavors {
        playStore {
            dimension "channel"
            versionNameSuffix "-playStore"
        }
        selfRelease {
            dimension "channel"
            versionNameSuffix "-selfRelease"
        }
    }
    lint {
        abortOnError false
    }
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 0, "seconds"
    resolutionStrategy.cacheChangingModulesFor 0, "seconds"
}

repositories {
    flatDir { dirs "libs" }
    google()
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://repo.thehyve.nl/content/repositories/releases' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    debugImplementation files("libs/radar-commons-android-debug.aar")
    releaseImplementation files("libs/radar-commons-android-release.aar")

    implementation ("org.radarbase:radar-android-login-qr:$radar_commons_android_version") {
        exclude group: 'org.radarbase', module: 'radar-commons-android'
    }

    implementation "com.google.android.gms:play-services-oss-licenses:$play_services_oss_licenses_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "org.slf4j:slf4j-api:2.0.13"

    implementation "com.gitlab.mvysny.slf4j:slf4j-handroid:$slf4j_handroid_version"

    implementation ("org.radarbase:radar-android-phone:$radar_commons_android_version") {
        exclude group: 'org.radarbase', module: 'radar-commons-android'
    }
    implementation ("org.radarbase:radar-android-phone-usage:$radar_commons_android_version"){
        exclude group: 'org.radarbase', module: 'radar-commons-android'
    }
    implementation ("org.radarbase:radar-android-phone-telephony:$radar_commons_android_version"){
        exclude group: 'org.radarbase', module: 'radar-commons-android'
    }
    implementation ("org.radarbase:radar-android-application-status:$radar_commons_android_version"){
        exclude group: 'org.radarbase', module: 'radar-commons-android'
    }
    implementation ("org.radarbase:radar-android-weather:$radar_commons_android_version"){
        exclude group: 'org.radarbase', module: 'radar-commons-android'
    }
    implementation ("org.radarbase:radar-android-audio:$radar_commons_android_version"){
        exclude group: 'org.radarbase', module: 'radar-commons-android'
    }
    implementation ("org.radarbase:radar-android-faros:$radar_commons_android_version") {
        exclude group: 'org.radarbase', module: 'radar-commons-android'
    }
//    implementation ("org.radarbase:radar-android-polar:$radar_commons_android_version"){
//        exclude group: 'org.radarbase', module: 'radar-commons-android'
//    }
    implementation ("org.radarbase:radar-android-google-sleep:$radar_commons_android_version"){
        exclude group: 'org.radarbase', module: 'radar-commons-android'
    }
    implementation ("org.radarbase:radar-android-google-activity:$radar_commons_android_version"){
        exclude group: 'org.radarbase', module: 'radar-commons-android'
    }
    implementation ("org.radarbase:radar-android-google-places:$radar_commons_android_version"){
        exclude group: 'org.radarbase', module: 'radar-commons-android'
    }
    implementation ("org.radarbase:radar-android-phone-audio-input:$radar_commons_android_version"){
        exclude group: 'org.radarbase', module: 'radar-commons-android'
    }

    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    implementation 'androidx.lifecycle:lifecycle-service:2.6.1'
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_process_version"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "com.google.android.gms:play-services-location:21.2.0"
    implementation "com.google.android.gms:play-services-maps:17.0.0"
    implementation "com.google.firebase:firebase-datatransport:18.1.8"
    implementation "com.google.firebase:firebase-encoders-proto:16.0.0"
    implementation("com.google.firebase:firebase-bom:32.8.1")
    implementation("com.google.firebase:firebase-config:21.6.3")
    implementation("com.google.firebase:firebase-crashlytics:18.6.4")
    implementation("com.google.firebase:firebase-analytics:21.6.2")
    implementation "androidx.localbroadcastmanager:localbroadcastmanager:1.1.0"
    api ("org.radarbase:radar-commons:0.15.0") {
        exclude group: "org.json", module: "json"
        exclude group: "org.apache.avro", module: "avro"
    }
    api ("org.radarbase:radar-schemas-commons:0.8.11") {
        exclude group: "org.apache.avro", module: "avro"
    }
    testImplementation "junit:junit:$junit_version"
    testRuntimeOnly "org.slf4j:slf4j-simple:$slf4j_simple_version"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "17"
        apiVersion = "1.7"
        languageVersion = "1.7"
    }
}

// Needed for Firebase. Put at the bottom so it can detect the Firebase version.
apply plugin: "com.google.gms.google-services"
apply plugin: "com.google.firebase.crashlytics"
